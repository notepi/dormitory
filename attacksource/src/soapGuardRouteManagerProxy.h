/* soapGuardRouteManagerProxy.h
   Generated by gSOAP 2.8.8 from dpflow.h

Copyright(C) 2000-2012, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
1) GPL or 2) Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#ifndef soapGuardRouteManagerProxy_H
#define soapGuardRouteManagerProxy_H
#include "soapH.h"
class GuardRouteManager
{   public:
	/// Runtime engine context allocated in constructor
	struct soap *soap;
	/// Endpoint URL of service 'GuardRouteManager' (change as needed)
	const char *endpoint;
	/// Constructor allocates soap engine context, sets default endpoint URL, and sets namespace mapping table
	GuardRouteManager()
	{ soap = soap_new(); endpoint = "http://localhost/func/web_main/webservice/zebra/route/guard/guard"; if (soap && !soap->namespaces) { static const struct Namespace namespaces[] = 
{
	{"SOAP-ENV", "http://schemas.xmlsoap.org/soap/envelope/", "http://www.w3.org/*/soap-envelope", NULL},
	{"SOAP-ENC", "http://schemas.xmlsoap.org/soap/encoding/", "http://www.w3.org/*/soap-encoding", NULL},
	{"xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL},
	{"xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL},
	{"wsdl", "http://tempuri.org/wsdl.xsd", NULL, NULL},
	{"ns1", "http://target_namespace/", NULL, NULL},
	{NULL, NULL, NULL, NULL}
};
	soap->namespaces = namespaces; } };
	/// Destructor frees deserialized data and soap engine context
	virtual ~GuardRouteManager() { if (soap) { soap_destroy(soap); soap_end(soap); soap_free(soap); } };
	/// Invoke 'setRedirectInfoForUMC' of service 'GuardRouteManager' and return error code (or SOAP_OK)
	virtual int __ns1__setRedirectInfoForUMC(_ns1__setRedirectInfoForUMC *ns1__setRedirectInfoForUMC, _ns1__setRedirectInfoForUMCResponse *ns1__setRedirectInfoForUMCResponse) { return soap ? soap_call___ns1__setRedirectInfoForUMC(soap, endpoint, NULL, ns1__setRedirectInfoForUMC, ns1__setRedirectInfoForUMCResponse) : SOAP_EOM; };
	/// Invoke 'DelRedirectInfoForUMC' of service 'GuardRouteManager' and return error code (or SOAP_OK)
	virtual int __ns1__DelRedirectInfoForUMC(_ns1__DelRedirectInfoForUMC *ns1__DelRedirectInfoForUMC, _ns1__DelRedirectInfoForUMCResponse *ns1__DelRedirectInfoForUMCResponse) { return soap ? soap_call___ns1__DelRedirectInfoForUMC(soap, endpoint, NULL, ns1__DelRedirectInfoForUMC, ns1__DelRedirectInfoForUMCResponse) : SOAP_EOM; };
	/// Invoke 'addGuardRoute' of service 'GuardRouteManager' and return error code (or SOAP_OK)
	virtual int __ns1__addGuardRoute(_ns1__addGuardRoute *ns1__addGuardRoute, _ns1__addGuardRouteResponse *ns1__addGuardRouteResponse) { return soap ? soap_call___ns1__addGuardRoute(soap, endpoint, NULL, ns1__addGuardRoute, ns1__addGuardRouteResponse) : SOAP_EOM; };
	/// Invoke 'removeGuardRoute' of service 'GuardRouteManager' and return error code (or SOAP_OK)
	virtual int __ns1__removeGuardRoute(_ns1__removeGuardRoute *ns1__removeGuardRoute, _ns1__removeGuardRouteResponse *ns1__removeGuardRouteResponse) { return soap ? soap_call___ns1__removeGuardRoute(soap, endpoint, NULL, ns1__removeGuardRoute, ns1__removeGuardRouteResponse) : SOAP_EOM; };
	/// Invoke 'addGuardRouteRange' of service 'GuardRouteManager' and return error code (or SOAP_OK)
	virtual int __ns1__addGuardRouteRange(_ns1__addGuardRouteRange *ns1__addGuardRouteRange, _ns1__addGuardRouteRangeResponse *ns1__addGuardRouteRangeResponse) { return soap ? soap_call___ns1__addGuardRouteRange(soap, endpoint, NULL, ns1__addGuardRouteRange, ns1__addGuardRouteRangeResponse) : SOAP_EOM; };
	/// Invoke 'removeGuardRouteRange' of service 'GuardRouteManager' and return error code (or SOAP_OK)
	virtual int __ns1__removeGuardRouteRange(_ns1__removeGuardRouteRange *ns1__removeGuardRouteRange, _ns1__removeGuardRouteRangeResponse *ns1__removeGuardRouteRangeResponse) { return soap ? soap_call___ns1__removeGuardRouteRange(soap, endpoint, NULL, ns1__removeGuardRouteRange, ns1__removeGuardRouteRangeResponse) : SOAP_EOM; };
	/// Invoke 'modGuardRoute' of service 'GuardRouteManager' and return error code (or SOAP_OK)
	virtual int __ns1__modGuardRoute(_ns1__modGuardRoute *ns1__modGuardRoute, _ns1__modGuardRouteResponse *ns1__modGuardRouteResponse) { return soap ? soap_call___ns1__modGuardRoute(soap, endpoint, NULL, ns1__modGuardRoute, ns1__modGuardRouteResponse) : SOAP_EOM; };
	/// Invoke 'getGuardRouteInfo' of service 'GuardRouteManager' and return error code (or SOAP_OK)
	virtual int __ns1__getGuardRouteInfo(_ns1__getGuardRouteInfo *ns1__getGuardRouteInfo, _ns1__getGuardRouteInfoResponse *ns1__getGuardRouteInfoResponse) { return soap ? soap_call___ns1__getGuardRouteInfo(soap, endpoint, NULL, ns1__getGuardRouteInfo, ns1__getGuardRouteInfoResponse) : SOAP_EOM; };
	/// Invoke 'setGuardConfigFinish' of service 'GuardRouteManager' and return error code (or SOAP_OK)
	virtual int __ns1__setGuardConfigFinish(_ns1__setGuardConfigFinish *ns1__setGuardConfigFinish, _ns1__setGuardConfigFinishResponse *ns1__setGuardConfigFinishResponse) { return soap ? soap_call___ns1__setGuardConfigFinish(soap, endpoint, NULL, ns1__setGuardConfigFinish, ns1__setGuardConfigFinishResponse) : SOAP_EOM; };
	/// Invoke 'getGuardAggregateRouteInfo' of service 'GuardRouteManager' and return error code (or SOAP_OK)
	virtual int __ns1__getGuardAggregateRouteInfo(_ns1__getGuardAggregateRouteInfo *ns1__getGuardAggregateRouteInfo, _ns1__getGuardRouteInfoResponse *ns1__getGuardRouteInfoResponse) { return soap ? soap_call___ns1__getGuardAggregateRouteInfo(soap, endpoint, NULL, ns1__getGuardAggregateRouteInfo, ns1__getGuardRouteInfoResponse) : SOAP_EOM; };
	/// Invoke 'setGuardAggEnable' of service 'GuardRouteManager' and return error code (or SOAP_OK)
	virtual int __ns1__setGuardAggEnable(_ns1__setGuardAggEnable *ns1__setGuardAggEnable, _ns1__setGuardAggEnableResponse *ns1__setGuardAggEnableResponse) { return soap ? soap_call___ns1__setGuardAggEnable(soap, endpoint, NULL, ns1__setGuardAggEnable, ns1__setGuardAggEnableResponse) : SOAP_EOM; };
	/// Invoke 'getGuardAggregateConf' of service 'GuardRouteManager' and return error code (or SOAP_OK)
	virtual int __ns1__getGuardAggregateConf(_ns1__getGuardAggregateConf *ns1__getGuardAggregateConf, char *wsdl__GuardAggregateConfResponse) { return soap ? soap_call___ns1__getGuardAggregateConf(soap, endpoint, NULL, ns1__getGuardAggregateConf, wsdl__GuardAggregateConfResponse) : SOAP_EOM; };
};
#endif
