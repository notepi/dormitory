/* soapClient.cpp
   Generated by gSOAP 2.8.8 from dpflow.h

Copyright(C) 2000-2012, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
1) GPL or 2) Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#if defined(__BORLANDC__)
#pragma option push -w-8060
#pragma option push -w-8004
#endif
#include "soapH.h"

SOAP_SOURCE_STAMP("@(#) soapClient.cpp ver 2.8.8 2016-04-25 07:53:41 GMT")


SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__setRedirectInfoForUMC(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__setRedirectInfoForUMC *ns1__setRedirectInfoForUMC, _ns1__setRedirectInfoForUMCResponse *ns1__setRedirectInfoForUMCResponse)
{	struct __ns1__setRedirectInfoForUMC soap_tmp___ns1__setRedirectInfoForUMC;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost/func/web_main/webservice/zebra/route/guard/guard";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__setRedirectInfoForUMC.ns1__setRedirectInfoForUMC = ns1__setRedirectInfoForUMC;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__setRedirectInfoForUMC(soap, &soap_tmp___ns1__setRedirectInfoForUMC);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__setRedirectInfoForUMC(soap, &soap_tmp___ns1__setRedirectInfoForUMC, "-ns1:setRedirectInfoForUMC", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__setRedirectInfoForUMC(soap, &soap_tmp___ns1__setRedirectInfoForUMC, "-ns1:setRedirectInfoForUMC", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__setRedirectInfoForUMCResponse)
		return soap_closesock(soap);
	ns1__setRedirectInfoForUMCResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__setRedirectInfoForUMCResponse->soap_get(soap, "ns1:setRedirectInfoForUMCResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__DelRedirectInfoForUMC(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__DelRedirectInfoForUMC *ns1__DelRedirectInfoForUMC, _ns1__DelRedirectInfoForUMCResponse *ns1__DelRedirectInfoForUMCResponse)
{	struct __ns1__DelRedirectInfoForUMC soap_tmp___ns1__DelRedirectInfoForUMC;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost/func/web_main/webservice/zebra/route/guard/guard";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__DelRedirectInfoForUMC.ns1__DelRedirectInfoForUMC = ns1__DelRedirectInfoForUMC;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__DelRedirectInfoForUMC(soap, &soap_tmp___ns1__DelRedirectInfoForUMC);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__DelRedirectInfoForUMC(soap, &soap_tmp___ns1__DelRedirectInfoForUMC, "-ns1:DelRedirectInfoForUMC", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__DelRedirectInfoForUMC(soap, &soap_tmp___ns1__DelRedirectInfoForUMC, "-ns1:DelRedirectInfoForUMC", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__DelRedirectInfoForUMCResponse)
		return soap_closesock(soap);
	ns1__DelRedirectInfoForUMCResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__DelRedirectInfoForUMCResponse->soap_get(soap, "ns1:DelRedirectInfoForUMCResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__addGuardRoute(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__addGuardRoute *ns1__addGuardRoute, _ns1__addGuardRouteResponse *ns1__addGuardRouteResponse)
{	struct __ns1__addGuardRoute soap_tmp___ns1__addGuardRoute;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost/func/web_main/webservice/zebra/route/guard/guard";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__addGuardRoute.ns1__addGuardRoute = ns1__addGuardRoute;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__addGuardRoute(soap, &soap_tmp___ns1__addGuardRoute);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__addGuardRoute(soap, &soap_tmp___ns1__addGuardRoute, "-ns1:addGuardRoute", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__addGuardRoute(soap, &soap_tmp___ns1__addGuardRoute, "-ns1:addGuardRoute", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__addGuardRouteResponse)
		return soap_closesock(soap);
	ns1__addGuardRouteResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__addGuardRouteResponse->soap_get(soap, "ns1:addGuardRouteResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__removeGuardRoute(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__removeGuardRoute *ns1__removeGuardRoute, _ns1__removeGuardRouteResponse *ns1__removeGuardRouteResponse)
{	struct __ns1__removeGuardRoute soap_tmp___ns1__removeGuardRoute;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost/func/web_main/webservice/zebra/route/guard/guard";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__removeGuardRoute.ns1__removeGuardRoute = ns1__removeGuardRoute;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__removeGuardRoute(soap, &soap_tmp___ns1__removeGuardRoute);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__removeGuardRoute(soap, &soap_tmp___ns1__removeGuardRoute, "-ns1:removeGuardRoute", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__removeGuardRoute(soap, &soap_tmp___ns1__removeGuardRoute, "-ns1:removeGuardRoute", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__removeGuardRouteResponse)
		return soap_closesock(soap);
	ns1__removeGuardRouteResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__removeGuardRouteResponse->soap_get(soap, "ns1:removeGuardRouteResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__addGuardRouteRange(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__addGuardRouteRange *ns1__addGuardRouteRange, _ns1__addGuardRouteRangeResponse *ns1__addGuardRouteRangeResponse)
{	struct __ns1__addGuardRouteRange soap_tmp___ns1__addGuardRouteRange;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost/func/web_main/webservice/zebra/route/guard/guard";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__addGuardRouteRange.ns1__addGuardRouteRange = ns1__addGuardRouteRange;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__addGuardRouteRange(soap, &soap_tmp___ns1__addGuardRouteRange);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__addGuardRouteRange(soap, &soap_tmp___ns1__addGuardRouteRange, "-ns1:addGuardRouteRange", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__addGuardRouteRange(soap, &soap_tmp___ns1__addGuardRouteRange, "-ns1:addGuardRouteRange", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__addGuardRouteRangeResponse)
		return soap_closesock(soap);
	ns1__addGuardRouteRangeResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__addGuardRouteRangeResponse->soap_get(soap, "ns1:addGuardRouteRangeResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__removeGuardRouteRange(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__removeGuardRouteRange *ns1__removeGuardRouteRange, _ns1__removeGuardRouteRangeResponse *ns1__removeGuardRouteRangeResponse)
{	struct __ns1__removeGuardRouteRange soap_tmp___ns1__removeGuardRouteRange;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost/func/web_main/webservice/zebra/route/guard/guard";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__removeGuardRouteRange.ns1__removeGuardRouteRange = ns1__removeGuardRouteRange;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__removeGuardRouteRange(soap, &soap_tmp___ns1__removeGuardRouteRange);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__removeGuardRouteRange(soap, &soap_tmp___ns1__removeGuardRouteRange, "-ns1:removeGuardRouteRange", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__removeGuardRouteRange(soap, &soap_tmp___ns1__removeGuardRouteRange, "-ns1:removeGuardRouteRange", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__removeGuardRouteRangeResponse)
		return soap_closesock(soap);
	ns1__removeGuardRouteRangeResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__removeGuardRouteRangeResponse->soap_get(soap, "ns1:removeGuardRouteRangeResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__modGuardRoute(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__modGuardRoute *ns1__modGuardRoute, _ns1__modGuardRouteResponse *ns1__modGuardRouteResponse)
{	struct __ns1__modGuardRoute soap_tmp___ns1__modGuardRoute;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost/func/web_main/webservice/zebra/route/guard/guard";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__modGuardRoute.ns1__modGuardRoute = ns1__modGuardRoute;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__modGuardRoute(soap, &soap_tmp___ns1__modGuardRoute);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__modGuardRoute(soap, &soap_tmp___ns1__modGuardRoute, "-ns1:modGuardRoute", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__modGuardRoute(soap, &soap_tmp___ns1__modGuardRoute, "-ns1:modGuardRoute", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__modGuardRouteResponse)
		return soap_closesock(soap);
	ns1__modGuardRouteResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__modGuardRouteResponse->soap_get(soap, "ns1:modGuardRouteResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__getGuardRouteInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__getGuardRouteInfo *ns1__getGuardRouteInfo, _ns1__getGuardRouteInfoResponse *ns1__getGuardRouteInfoResponse)
{	struct __ns1__getGuardRouteInfo soap_tmp___ns1__getGuardRouteInfo;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost/func/web_main/webservice/zebra/route/guard/guard";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getGuardRouteInfo.ns1__getGuardRouteInfo = ns1__getGuardRouteInfo;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__getGuardRouteInfo(soap, &soap_tmp___ns1__getGuardRouteInfo);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getGuardRouteInfo(soap, &soap_tmp___ns1__getGuardRouteInfo, "-ns1:getGuardRouteInfo", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getGuardRouteInfo(soap, &soap_tmp___ns1__getGuardRouteInfo, "-ns1:getGuardRouteInfo", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__getGuardRouteInfoResponse)
		return soap_closesock(soap);
	ns1__getGuardRouteInfoResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__getGuardRouteInfoResponse->soap_get(soap, "ns1:getGuardRouteInfoResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__setGuardConfigFinish(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__setGuardConfigFinish *ns1__setGuardConfigFinish, _ns1__setGuardConfigFinishResponse *ns1__setGuardConfigFinishResponse)
{	struct __ns1__setGuardConfigFinish soap_tmp___ns1__setGuardConfigFinish;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost/func/web_main/webservice/zebra/route/guard/guard";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__setGuardConfigFinish.ns1__setGuardConfigFinish = ns1__setGuardConfigFinish;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__setGuardConfigFinish(soap, &soap_tmp___ns1__setGuardConfigFinish);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__setGuardConfigFinish(soap, &soap_tmp___ns1__setGuardConfigFinish, "-ns1:setGuardConfigFinish", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__setGuardConfigFinish(soap, &soap_tmp___ns1__setGuardConfigFinish, "-ns1:setGuardConfigFinish", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__setGuardConfigFinishResponse)
		return soap_closesock(soap);
	ns1__setGuardConfigFinishResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__setGuardConfigFinishResponse->soap_get(soap, "ns1:setGuardConfigFinishResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__getGuardAggregateRouteInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__getGuardAggregateRouteInfo *ns1__getGuardAggregateRouteInfo, _ns1__getGuardRouteInfoResponse *ns1__getGuardRouteInfoResponse)
{	struct __ns1__getGuardAggregateRouteInfo soap_tmp___ns1__getGuardAggregateRouteInfo;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost/func/web_main/webservice/zebra/route/guard/guard";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getGuardAggregateRouteInfo.ns1__getGuardAggregateRouteInfo = ns1__getGuardAggregateRouteInfo;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__getGuardAggregateRouteInfo(soap, &soap_tmp___ns1__getGuardAggregateRouteInfo);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getGuardAggregateRouteInfo(soap, &soap_tmp___ns1__getGuardAggregateRouteInfo, "-ns1:getGuardAggregateRouteInfo", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getGuardAggregateRouteInfo(soap, &soap_tmp___ns1__getGuardAggregateRouteInfo, "-ns1:getGuardAggregateRouteInfo", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__getGuardRouteInfoResponse)
		return soap_closesock(soap);
	ns1__getGuardRouteInfoResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__getGuardRouteInfoResponse->soap_get(soap, "ns1:getGuardRouteInfoResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__setGuardAggEnable(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__setGuardAggEnable *ns1__setGuardAggEnable, _ns1__setGuardAggEnableResponse *ns1__setGuardAggEnableResponse)
{	struct __ns1__setGuardAggEnable soap_tmp___ns1__setGuardAggEnable;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost/func/web_main/webservice/zebra/route/guard/guard";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__setGuardAggEnable.ns1__setGuardAggEnable = ns1__setGuardAggEnable;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__setGuardAggEnable(soap, &soap_tmp___ns1__setGuardAggEnable);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__setGuardAggEnable(soap, &soap_tmp___ns1__setGuardAggEnable, "-ns1:setGuardAggEnable", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__setGuardAggEnable(soap, &soap_tmp___ns1__setGuardAggEnable, "-ns1:setGuardAggEnable", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__setGuardAggEnableResponse)
		return soap_closesock(soap);
	ns1__setGuardAggEnableResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__setGuardAggEnableResponse->soap_get(soap, "ns1:setGuardAggEnableResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__getGuardAggregateConf(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__getGuardAggregateConf *ns1__getGuardAggregateConf, char *wsdl__GuardAggregateConfResponse)
{	struct __ns1__getGuardAggregateConf soap_tmp___ns1__getGuardAggregateConf;
	struct __ns1__getGuardAggregateConfResponse *soap_tmp___ns1__getGuardAggregateConfResponse;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost/func/web_main/webservice/zebra/route/guard/guard";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getGuardAggregateConf.ns1__getGuardAggregateConf = ns1__getGuardAggregateConf;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__getGuardAggregateConf(soap, &soap_tmp___ns1__getGuardAggregateConf);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getGuardAggregateConf(soap, &soap_tmp___ns1__getGuardAggregateConf, "-ns1:getGuardAggregateConf", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getGuardAggregateConf(soap, &soap_tmp___ns1__getGuardAggregateConf, "-ns1:getGuardAggregateConf", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!wsdl__GuardAggregateConfResponse)
		return soap_closesock(soap);
	soap_default_byte(soap, wsdl__GuardAggregateConfResponse);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp___ns1__getGuardAggregateConfResponse = soap_get___ns1__getGuardAggregateConfResponse(soap, NULL, "-ns1:getGuardAggregateConfResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	if (wsdl__GuardAggregateConfResponse && soap_tmp___ns1__getGuardAggregateConfResponse->wsdl__GuardAggregateConfResponse)
		*wsdl__GuardAggregateConfResponse = *soap_tmp___ns1__getGuardAggregateConfResponse->wsdl__GuardAggregateConfResponse;
	return soap_closesock(soap);
}

#if defined(__BORLANDC__)
#pragma option pop
#pragma option pop
#endif

/* End of soapClient.cpp */
